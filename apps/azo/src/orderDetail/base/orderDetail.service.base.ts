/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";

import {
  Prisma,
  OrderDetail as PrismaOrderDetail,
  Order as PrismaOrder,
  Product as PrismaProduct,
} from "@prisma/client";

export class OrderDetailServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.OrderDetailCountArgs, "select">
  ): Promise<number> {
    return this.prisma.orderDetail.count(args);
  }

  async orderDetails(
    args: Prisma.OrderDetailFindManyArgs
  ): Promise<PrismaOrderDetail[]> {
    return this.prisma.orderDetail.findMany(args);
  }
  async orderDetail(
    args: Prisma.OrderDetailFindUniqueArgs
  ): Promise<PrismaOrderDetail | null> {
    return this.prisma.orderDetail.findUnique(args);
  }
  async createOrderDetail(
    args: Prisma.OrderDetailCreateArgs
  ): Promise<PrismaOrderDetail> {
    return this.prisma.orderDetail.create(args);
  }
  async updateOrderDetail(
    args: Prisma.OrderDetailUpdateArgs
  ): Promise<PrismaOrderDetail> {
    return this.prisma.orderDetail.update(args);
  }
  async deleteOrderDetail(
    args: Prisma.OrderDetailDeleteArgs
  ): Promise<PrismaOrderDetail> {
    return this.prisma.orderDetail.delete(args);
  }

  async getOrder(parentId: string): Promise<PrismaOrder | null> {
    return this.prisma.orderDetail
      .findUnique({
        where: { id: parentId },
      })
      .order();
  }

  async getProduct(parentId: string): Promise<PrismaProduct | null> {
    return this.prisma.orderDetail
      .findUnique({
        where: { id: parentId },
      })
      .product();
  }
}
