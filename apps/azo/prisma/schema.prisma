datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  createdAt   DateTime        @default(now())
  email       String?         @unique
  id          String          @id @default(cuid())
  orders      Order[]
  password    String
  phone       String?
  roles       Json
  status      EnumUserStatus?
  updatedAt   DateTime        @updatedAt
  userDetails UserDetail[]
  username    String          @unique
  wallets     Wallet[]
}

model UserDetail {
  birthdate   DateTime?
  createdAt   DateTime  @default(now())
  firstName   String?
  id          String    @id @default(cuid())
  lastName    String?
  phoneNumber String?
  updatedAt   DateTime  @updatedAt
  user        User?     @relation(fields: [userId], references: [id])
  userId      String?
}

model Wallet {
  balance      Float?
  createdAt    DateTime             @default(now())
  currency     String?
  id           String               @id @default(cuid())
  transactions Transaction[]
  typeField    EnumWalletTypeField?
  updatedAt    DateTime             @updatedAt
  user         User?                @relation(fields: [userId], references: [id])
  userId       String?
}

model Transaction {
  amount          Float?
  createdAt       DateTime                  @default(now())
  id              String                    @id @default(cuid())
  status          EnumTransactionStatus?
  transactionDate DateTime?
  typeField       EnumTransactionTypeField?
  updatedAt       DateTime                  @updatedAt
  wallet          Wallet?                   @relation(fields: [walletId], references: [id])
  walletId        String?
}

model Service {
  createdAt   DateTime              @default(now())
  description String?
  details     String?
  id          String                @id @default(cuid())
  name        String?
  products    Product[]
  provider    String?
  typeField   EnumServiceTypeField?
  updatedAt   DateTime              @updatedAt
}

model Product {
  createdAt      DateTime        @default(now())
  detailProducts DetailProduct[]
  id             String          @id @default(cuid())
  name           String?
  price          Float?
  service        Service?        @relation(fields: [serviceId], references: [id])
  serviceId      String?
  updatedAt      DateTime        @updatedAt
}

model DetailProduct {
  createdAt   DateTime @default(now())
  description String?
  feature     String?
  id          String   @id @default(cuid())
  product     Product? @relation(fields: [productId], references: [id])
  productId   String?
  quantity    Int?
  updatedAt   DateTime @updatedAt
  value       String?
}

model Order {
  createdAt   DateTime         @default(now())
  id          String           @id @default(cuid())
  orderDate   DateTime?
  orderNumber String?
  status      EnumOrderStatus?
  totalAmount Float?
  updatedAt   DateTime         @updatedAt
  user        User?            @relation(fields: [userId], references: [id])
  userId      String?
}

enum EnumUserStatus {
  Active
  Inactive
}

enum EnumWalletTypeField {
  Option1
}

enum EnumTransactionStatus {
  Option1
}

enum EnumTransactionTypeField {
  Option1
}

enum EnumServiceTypeField {
  Option1
}

enum EnumOrderStatus {
  Option1
}
